"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.webpackInitSchematic = exports.webpackInitGenerator = void 0;
const tslib_1 = require("tslib");
const devkit_1 = require("@nrwl/devkit");
const versions_1 = require("@nrwl/js/src/utils/versions");
const versions_2 = require("../../utils/versions");
const add_babel_inputs_1 = require("@nrwl/js/src/utils/add-babel-inputs");
function webpackInitGenerator(tree, schema) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        if (schema.compiler === 'babel') {
            (0, add_babel_inputs_1.addBabelInputs)(tree);
        }
        const devDependencies = {
            '@nrwl/webpack': versions_2.nxVersion,
        };
        if (schema.compiler === 'swc') {
            devDependencies['@swc/helpers'] = versions_2.swcHelpersVersion;
            devDependencies['@swc/core'] = versions_1.swcCoreVersion;
            devDependencies['swc-loader'] = versions_2.swcLoaderVersion;
        }
        if (schema.compiler === 'tsc') {
            devDependencies['tslib'] = versions_2.tsLibVersion;
        }
        if (schema.uiFramework === 'react') {
            devDependencies['@pmmmwh/react-refresh-webpack-plugin'] =
                versions_2.reactRefreshWebpackPluginVersion;
            devDependencies['@svgr/webpack'] = versions_2.svgrWebpackVersion;
            devDependencies['react-refresh'] = versions_2.reactRefreshVersion;
            devDependencies['url-loader'] = versions_2.urlLoaderVersion;
        }
        if (!schema.skipFormat) {
            yield (0, devkit_1.formatFiles)(tree);
        }
        return (0, devkit_1.addDependenciesToPackageJson)(tree, {}, devDependencies);
    });
}
exports.webpackInitGenerator = webpackInitGenerator;
exports.default = webpackInitGenerator;
exports.webpackInitSchematic = (0, devkit_1.convertNxGenerator)(webpackInitGenerator);
//# sourceMappingURL=init.js.map