{"version":3,"file":"chart-popover.js","sourceRoot":"","sources":["../../../src/mixed-line-bar-chart/chart-popover.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,IAAI,MAAM,MAAM,CAAC;AAExB,OAAO,YAAY,MAAM,sCAAsC,CAAC;AAChE,OAAO,kBAAkB,MAAM,6CAA6C,CAAC;AAG7E,OAAO,MAAM,MAAM,iBAAiB,CAAC;AACrC,OAAO,EAAE,UAAU,EAAE,MAAM,mCAAmC,CAAC;AAgB/D,eAAe,KAAK,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;AAEnD,SAAS,iBAAiB,CACxB,EAW4B,EAC5B,UAAkC;QAXhC,YAAY,kBAAA,EACZ,QAAQ,cAAA,EACR,MAAM,YAAA,EACN,QAAQ,cAAA,EACR,gBAAgB,sBAAA,EAChB,SAAS,eAAA,EACT,YAAe,EAAf,IAAI,mBAAG,QAAQ,KAAA,EACf,gBAAgB,sBAAA,EAChB,YAAY,kBAAA,EACZ,YAAY,kBAAA;IAId,OAAO,CACL,oBAAC,UAAU,IAAC,IAAE,EAAE,MAAM,IACnB,UAAC,KAAK,EAAE,GAAG,IAAK,OAAA,CACf,6BAAK,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,CAAC,KAAK,KAAK,SAAS,IAAI,MAAM,CAAC,OAAO,CAAC,IAClE,CAAC,MAAM,IAAI,KAAK,KAAK,QAAQ,CAAC,IAAI,gBAAgB,IAAI,CACrD,oBAAC,YAAY,IACX,GAAG,EAAE,UAAU,EACf,KAAK,EAAE,gBAAgB,CAAC,QAAQ,EAChC,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,gBAAgB,CAAC,QAAQ,EACnC,aAAa,EAAE,QAAQ,EACvB,gBAAgB,EAAE,gBAAgB,EAClC,SAAS,EAAE,SAAS,EACpB,SAAS,EAAE,YAAY,CAAC,OAAO,EAC/B,IAAI,EAAE,IAAI,EACV,YAAY,EAAE,YAAY,EAC1B,YAAY,EAAE,YAAY;QAE1B,oBAAC,kBAAkB,IAAC,OAAO,EAAE,gBAAgB,CAAC,OAAO,GAAI,CAC5C,CAChB,CACG,CACP,EApBgB,CAoBhB,CACU,CACd,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport ChartPopover from '../internal/components/chart-popover';\nimport ChartSeriesDetails from '../internal/components/chart-series-details';\nimport { ChartDataTypes, MixedLineBarChartProps } from './interfaces';\n\nimport styles from './styles.css.js';\nimport { Transition } from '../internal/components/transition';\nimport { HighlightDetails } from './format-highlighted';\n\nexport interface MixedChartPopoverProps<T extends ChartDataTypes> {\n  containerRef: React.RefObject<HTMLDivElement>;\n  trackRef: React.RefObject<SVGElement>;\n  isOpen: boolean;\n  isPinned: boolean;\n  highlightDetails: null | HighlightDetails;\n  onDismiss(): void;\n  size: MixedLineBarChartProps<T>['detailPopoverSize'];\n  dismissAriaLabel?: string;\n  onMouseEnter?: (event: React.MouseEvent) => void;\n  onMouseLeave?: (event: React.MouseEvent) => void;\n}\n\nexport default React.forwardRef(MixedChartPopover);\n\nfunction MixedChartPopover<T extends ChartDataTypes>(\n  {\n    containerRef,\n    trackRef,\n    isOpen,\n    isPinned,\n    highlightDetails,\n    onDismiss,\n    size = 'medium',\n    dismissAriaLabel,\n    onMouseEnter,\n    onMouseLeave,\n  }: MixedChartPopoverProps<T>,\n  popoverRef: React.Ref<HTMLElement>\n) {\n  return (\n    <Transition in={isOpen}>\n      {(state, ref) => (\n        <div ref={ref} className={clsx(state === 'exiting' && styles.exiting)}>\n          {(isOpen || state !== 'exited') && highlightDetails && (\n            <ChartPopover\n              ref={popoverRef}\n              title={highlightDetails.position}\n              trackRef={trackRef}\n              trackKey={highlightDetails.position}\n              dismissButton={isPinned}\n              dismissAriaLabel={dismissAriaLabel}\n              onDismiss={onDismiss}\n              container={containerRef.current}\n              size={size}\n              onMouseEnter={onMouseEnter}\n              onMouseLeave={onMouseLeave}\n            >\n              <ChartSeriesDetails details={highlightDetails.details} />\n            </ChartPopover>\n          )}\n        </div>\n      )}\n    </Transition>\n  );\n}\n"]}