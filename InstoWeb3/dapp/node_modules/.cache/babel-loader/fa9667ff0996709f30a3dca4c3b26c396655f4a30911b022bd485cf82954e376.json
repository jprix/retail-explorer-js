{"ast":null,"code":"const ETH = {\n  name: 'Ether',\n  symbol: 'ETH',\n  decimals: 18\n};\nconst MATIC = {\n  name: 'Matic',\n  symbol: 'MATIC',\n  decimals: 18\n};\nconst CELO = {\n  name: 'Celo',\n  symbol: 'CELO',\n  decimals: 18\n};\nfunction isExtendedChainInformation(chainInformation) {\n  return !!chainInformation.nativeCurrency;\n}\nexport function getAddChainParameters(chainId) {\n  const chainInformation = CHAINS[chainId];\n  if (isExtendedChainInformation(chainInformation)) {\n    return {\n      chainId,\n      chainName: chainInformation.name,\n      nativeCurrency: chainInformation.nativeCurrency,\n      rpcUrls: chainInformation.urls,\n      blockExplorerUrls: chainInformation.blockExplorerUrls\n    };\n  } else {\n    return chainId;\n  }\n}\nexport const CHAINS = {\n  1: {\n    urls: [process.env.infuraKey ? `https://mainnet.infura.io/v3/${process.env.infuraKey}` : '', process.env.alchemyKey ? `https://eth-mainnet.alchemyapi.io/v2/${process.env.alchemyKey}` : '', 'https://cloudflare-eth.com'].filter(url => url !== ''),\n    name: 'Mainnet'\n  },\n  3: {\n    urls: [process.env.infuraKey ? `https://ropsten.infura.io/v3/${process.env.infuraKey}` : ''].filter(url => url !== ''),\n    name: 'Ropsten'\n  },\n  4: {\n    urls: [process.env.infuraKey ? `https://rinkeby.infura.io/v3/${process.env.infuraKey}` : ''].filter(url => url !== ''),\n    name: 'Rinkeby'\n  },\n  5: {\n    urls: [process.env.infuraKey ? `https://goerli.infura.io/v3/${process.env.infuraKey}` : ''].filter(url => url !== ''),\n    name: 'Görli'\n  },\n  42: {\n    urls: [process.env.infuraKey ? `https://kovan.infura.io/v3/${process.env.infuraKey}` : ''].filter(url => url !== ''),\n    name: 'Kovan'\n  },\n  // Optimism\n  10: {\n    urls: [process.env.infuraKey ? `https://optimism-mainnet.infura.io/v3/${process.env.infuraKey}` : '', 'https://mainnet.optimism.io'].filter(url => url !== ''),\n    name: 'Optimism',\n    nativeCurrency: ETH,\n    blockExplorerUrls: ['https://optimistic.etherscan.io']\n  },\n  69: {\n    urls: [process.env.infuraKey ? `https://optimism-kovan.infura.io/v3/${process.env.infuraKey}` : '', 'https://kovan.optimism.io'].filter(url => url !== ''),\n    name: 'Optimism Kovan',\n    nativeCurrency: ETH,\n    blockExplorerUrls: ['https://kovan-optimistic.etherscan.io']\n  },\n  // Arbitrum\n  42161: {\n    urls: [process.env.infuraKey ? `https://arbitrum-mainnet.infura.io/v3/${process.env.infuraKey}` : '', 'https://arb1.arbitrum.io/rpc'].filter(url => url !== ''),\n    name: 'Arbitrum One',\n    nativeCurrency: ETH,\n    blockExplorerUrls: ['https://arbiscan.io']\n  },\n  421611: {\n    urls: [process.env.infuraKey ? `https://arbitrum-rinkeby.infura.io/v3/${process.env.infuraKey}` : '', 'https://rinkeby.arbitrum.io/rpc'].filter(url => url !== ''),\n    name: 'Arbitrum Testnet',\n    nativeCurrency: ETH,\n    blockExplorerUrls: ['https://testnet.arbiscan.io']\n  },\n  // Polygon\n  137: {\n    urls: [process.env.infuraKey ? `https://polygon-mainnet.infura.io/v3/${process.env.infuraKey}` : '', 'https://polygon-rpc.com'].filter(url => url !== ''),\n    name: 'Polygon Mainnet',\n    nativeCurrency: MATIC,\n    blockExplorerUrls: ['https://polygonscan.com']\n  },\n  80001: {\n    urls: [process.env.infuraKey ? `https://polygon-mumbai.infura.io/v3/${process.env.infuraKey}` : ''].filter(url => url !== ''),\n    name: 'Polygon Mumbai',\n    nativeCurrency: MATIC,\n    blockExplorerUrls: ['https://mumbai.polygonscan.com']\n  },\n  // Celo\n  42220: {\n    urls: ['https://forno.celo.org'],\n    name: 'Celo',\n    nativeCurrency: CELO,\n    blockExplorerUrls: ['https://explorer.celo.org']\n  },\n  44787: {\n    urls: ['https://alfajores-forno.celo-testnet.org'],\n    name: 'Celo Alfajores',\n    nativeCurrency: CELO,\n    blockExplorerUrls: ['https://alfajores-blockscout.celo-testnet.org']\n  }\n};\nexport const URLS = Object.keys(CHAINS).reduce((accumulator, chainId) => {\n  const validURLs = CHAINS[Number(chainId)].urls;\n  if (validURLs.length) {\n    accumulator[Number(chainId)] = validURLs;\n  }\n  console.log('this is the accumulator, ', accumulator);\n  return accumulator;\n}, {});","map":{"version":3,"names":["ETH","name","symbol","decimals","MATIC","CELO","isExtendedChainInformation","chainInformation","nativeCurrency","getAddChainParameters","chainId","CHAINS","chainName","rpcUrls","urls","blockExplorerUrls","process","env","infuraKey","alchemyKey","filter","url","URLS","Object","keys","reduce","accumulator","validURLs","Number","length","console","log"],"sources":["/Users/jay/IdeaProjects/InstoWeb3/dapp/src/utils/chains.js"],"sourcesContent":["const ETH = {\n  name: 'Ether',\n  symbol: 'ETH',\n  decimals: 18,\n};\n\nconst MATIC = {\n  name: 'Matic',\n  symbol: 'MATIC',\n  decimals: 18,\n};\n\nconst CELO = {\n  name: 'Celo',\n  symbol: 'CELO',\n  decimals: 18,\n};\n\nfunction isExtendedChainInformation(chainInformation) {\n  return !!chainInformation.nativeCurrency;\n}\n\nexport function getAddChainParameters(chainId) {\n  const chainInformation = CHAINS[chainId];\n  if (isExtendedChainInformation(chainInformation)) {\n    return {\n      chainId,\n      chainName: chainInformation.name,\n      nativeCurrency: chainInformation.nativeCurrency,\n      rpcUrls: chainInformation.urls,\n      blockExplorerUrls: chainInformation.blockExplorerUrls,\n    };\n  } else {\n    return chainId;\n  }\n}\n\nexport const CHAINS = {\n  1: {\n    urls: [\n      process.env.infuraKey\n        ? `https://mainnet.infura.io/v3/${process.env.infuraKey}`\n        : '',\n      process.env.alchemyKey\n        ? `https://eth-mainnet.alchemyapi.io/v2/${process.env.alchemyKey}`\n        : '',\n      'https://cloudflare-eth.com',\n    ].filter((url) => url !== ''),\n    name: 'Mainnet',\n  },\n  3: {\n    urls: [\n      process.env.infuraKey\n        ? `https://ropsten.infura.io/v3/${process.env.infuraKey}`\n        : '',\n    ].filter((url) => url !== ''),\n    name: 'Ropsten',\n  },\n  4: {\n    urls: [\n      process.env.infuraKey\n        ? `https://rinkeby.infura.io/v3/${process.env.infuraKey}`\n        : '',\n    ].filter((url) => url !== ''),\n    name: 'Rinkeby',\n  },\n  5: {\n    urls: [\n      process.env.infuraKey\n        ? `https://goerli.infura.io/v3/${process.env.infuraKey}`\n        : '',\n    ].filter((url) => url !== ''),\n    name: 'Görli',\n  },\n  42: {\n    urls: [\n      process.env.infuraKey\n        ? `https://kovan.infura.io/v3/${process.env.infuraKey}`\n        : '',\n    ].filter((url) => url !== ''),\n    name: 'Kovan',\n  },\n  // Optimism\n  10: {\n    urls: [\n      process.env.infuraKey\n        ? `https://optimism-mainnet.infura.io/v3/${process.env.infuraKey}`\n        : '',\n      'https://mainnet.optimism.io',\n    ].filter((url) => url !== ''),\n    name: 'Optimism',\n    nativeCurrency: ETH,\n    blockExplorerUrls: ['https://optimistic.etherscan.io'],\n  },\n  69: {\n    urls: [\n      process.env.infuraKey\n        ? `https://optimism-kovan.infura.io/v3/${process.env.infuraKey}`\n        : '',\n      'https://kovan.optimism.io',\n    ].filter((url) => url !== ''),\n    name: 'Optimism Kovan',\n    nativeCurrency: ETH,\n    blockExplorerUrls: ['https://kovan-optimistic.etherscan.io'],\n  },\n  // Arbitrum\n  42161: {\n    urls: [\n      process.env.infuraKey\n        ? `https://arbitrum-mainnet.infura.io/v3/${process.env.infuraKey}`\n        : '',\n      'https://arb1.arbitrum.io/rpc',\n    ].filter((url) => url !== ''),\n    name: 'Arbitrum One',\n    nativeCurrency: ETH,\n    blockExplorerUrls: ['https://arbiscan.io'],\n  },\n  421611: {\n    urls: [\n      process.env.infuraKey\n        ? `https://arbitrum-rinkeby.infura.io/v3/${process.env.infuraKey}`\n        : '',\n      'https://rinkeby.arbitrum.io/rpc',\n    ].filter((url) => url !== ''),\n    name: 'Arbitrum Testnet',\n    nativeCurrency: ETH,\n    blockExplorerUrls: ['https://testnet.arbiscan.io'],\n  },\n  // Polygon\n  137: {\n    urls: [\n      process.env.infuraKey\n        ? `https://polygon-mainnet.infura.io/v3/${process.env.infuraKey}`\n        : '',\n      'https://polygon-rpc.com',\n    ].filter((url) => url !== ''),\n    name: 'Polygon Mainnet',\n    nativeCurrency: MATIC,\n    blockExplorerUrls: ['https://polygonscan.com'],\n  },\n  80001: {\n    urls: [\n      process.env.infuraKey\n        ? `https://polygon-mumbai.infura.io/v3/${process.env.infuraKey}`\n        : '',\n    ].filter((url) => url !== ''),\n    name: 'Polygon Mumbai',\n    nativeCurrency: MATIC,\n    blockExplorerUrls: ['https://mumbai.polygonscan.com'],\n  },\n  // Celo\n  42220: {\n    urls: ['https://forno.celo.org'],\n    name: 'Celo',\n    nativeCurrency: CELO,\n    blockExplorerUrls: ['https://explorer.celo.org'],\n  },\n  44787: {\n    urls: ['https://alfajores-forno.celo-testnet.org'],\n    name: 'Celo Alfajores',\n    nativeCurrency: CELO,\n    blockExplorerUrls: ['https://alfajores-blockscout.celo-testnet.org'],\n  },\n};\n\nexport const URLS = Object.keys(CHAINS).reduce((accumulator, chainId) => {\n  const validURLs = CHAINS[Number(chainId)].urls;\n\n  if (validURLs.length) {\n    accumulator[Number(chainId)] = validURLs;\n  }\n  console.log('this is the accumulator, ', accumulator);\n  return accumulator;\n}, {});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}